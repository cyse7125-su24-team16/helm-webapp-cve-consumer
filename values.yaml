replicaCount: {{ .Values.replicaCount }}
name: {{ .Values.appName }}

image:
  repository: {{ .Values.imageRepository }}
  tag: {{ .Values.tag }}
  pullPolicy: {{ .Values.pullPolicy }}

postgresql:
  host: {{ .Values.postgresqlHost }}
  port: {{ .Values.postgresqlPort }}
  database: {{ .Values.postgresqlDatabase }}
  username: {{ .Values.postgresqlUsername }}
  passwordSecretName: {{ .Values.postgresqlPasswordSecretName }}
  DB_URL: "postgres://{{ .Values.postgresqlUsername }}:{{ required "A valid .Values.postgresqlPassword is required!" .Values.postgresqlPassword }}@{{ .Values.postgresqlHost }}:{{ .Values.postgresqlPort }}/{{ .Values.postgresqlDatabase }}?sslmode=disable"

kafka:
  broker1: {{ .Values.kafkaBroker1 }}
  broker2: {{ .Values.kafkaBroker2 }}
  broker3: {{ .Values.kafkaBroker3 }}
  topic: {{ .Values.kafkaTopic }}
  username: {{ .Values.kafkaUsername }}
  passwordSecretName: {{ .Values.kafkaPasswordSecretName }}

initContainers:
  flywayMigration:
    name: {{ .Values.flywayMigrationName }}
    image: {{ .Values.flywayMigrationImage }}

imagePullSecrets:
  - name: {{ .Values.imagePullSecretName }}

volumeClaim:
  name: {{ .Values.volumeClaimName }}

namespace: {{ .Values.namespace }}

secrets:
  postgresql:
    password: {{ .Values.postgresqlPassword }}
  kafka:
    password: {{ .Values.kafkaPassword }}
  myregistrykey:
    dockerconfigjson: {{ .Values.dockerconfigjson }}

probes:
  liveness:
    path: {{ .Values.livenessPath }}
    port: {{ .Values.livenessPort }}
    initialDelaySeconds: {{ .Values.livenessInitialDelaySeconds }}
    periodSeconds: {{ .Values.livenessPeriodSeconds }}
  readiness:
    path: {{ .Values.readinessPath }}
    port: {{ .Values.readinessPort }}
    initialDelaySeconds: {{ .Values.readinessInitialDelaySeconds }}
    periodSeconds: {{ .Values.readinessPeriodSeconds }}
