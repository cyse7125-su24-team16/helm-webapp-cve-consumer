replicaCount: {$replicaCount}
name: {$appName}

image:
  repository: {$imageRepository}
  tag: {$tag}
  pullPolicy: {$pullPolicy}

postgresql:
  host: {$postgresqlHost}
  port: {$postgresqlPort}
  database: {$postgresqlDatabase}
  username: {$postgresqlUsername}
  passwordSecretName: {$postgresqlPasswordSecretName}
  DB_URL: "postgres://{$postgresqlUsername}:{$postgresqlPassword}@{$postgresqlHost}:{$postgresqlPort}/{$postgresqlDatabase}?sslmode=disable"

kafka:
  broker1: {$kafkaBroker1}
  broker2: {$kafkaBroker2}
  broker3: {$kafkaBroker3}
  topic: {$kafkaTopic}
  username: {$kafkaUsername}
  passwordSecretName: {$kafkaPasswordSecretName}

initContainers:
  flywayMigration:
    name: {$flywayMigrationName}
    image: {$flywayMigrationImage}

imagePullSecrets:
  - name: {$imagePullSecretName}

volumeClaim:
  name: {$volumeClaimName}

namespace: {$namespace}

secrets:
  postgresql:
    password: cGJzZXhwYXNzd29yZA
  kafka:
    password: cGFzc3dvcmQ
  myregistrykey:
    dockerconfigjson: {$dockerconfigjson}

probes:
  liveness:
    path: {$livenessPath}
    port: {$livenessPort}
    initialDelaySeconds: {$livenessInitialDelaySeconds}
    periodSeconds: {$livenessPeriodSeconds}
  readiness:
    path: {$readinessPath}
    port: {$readinessPort}
    initialDelaySeconds: {$readinessInitialDelaySeconds}
    periodSeconds: {$readinessPeriodSeconds}
