  app:
  name: "${appName}"
  label: "${appLabel}"
  namespace: "${namespace}"

image:
  tag: "${tag}"
  pullPolicy: "${pullPolicy}"
  flywayMigration: "${flywayMigrationImage}"
  myApp: "${myAppImage}"

secrets:
  DB_URL: "${dbUrl}"
  ZIP_URL: "${zipUrl}"
  FLYWAY_URL: "${flywayUrl}"
  FLYWAY_USER: "${flywayUser}"
  FLYWAY_PASSWORD: "${flywayPassword}"
  FLYWAY_LOCATIONS: "${flywayLocations}"
  FLYWAY_SCHEMAS: "${flywaySchemas}"
  POSTGRES_DB: "${postgresDb}"
  POSTGRES_USER: "${postgresUser}"
  POSTGRES_PASSWORD: "${postgresPassword}"
  KAFKA_PASSWORD: "${kafkaPassword}"
  flyway:
    kmsKeyId: "${kmsKeyId}"
  myregistrykey:
    dockerconfigjson: "${dockerconfigjson}"

env:
  DB_URL: "${dbUrl}"
  FLYWAY_URL: "${flywayUrl}"
  FLYWAY_USER: "${flywayUser}"
  FLYWAY_PASSWORD: "${flywayPassword}"
  FLYWAY_LOCATIONS: "${flywayLocations}"
  FLYWAY_SCHEMAS: "${flywaySchemas}"
  KAFKA_BROKER1: "${kafkaBroker1}"
  KAFKA_BROKER2: "${kafkaBroker2}"
  KAFKA_BROKER3: "${kafkaBroker3}"
  KAFKA_TOPIC: "${kafkaTopic}"
  KAFKA_USERNAME: "${kafkaUsername}"
  KAFKA_PASSWORD: "${kafkaPassword}"

imagePullSecrets:
  - name: "${registrySecret}"

probes:
  liveness:
    path: "${livenessPath}"
    port: ${livenessPort}
    initialDelaySeconds: ${livenessInitialDelaySeconds}
    periodSeconds: ${livenessPeriodSeconds}
  readiness:
    path: "${readinessPath}"
    port: ${readinessPort}
    initialDelaySeconds: ${readinessInitialDelaySeconds}
    periodSeconds: ${readinessPeriodSeconds}

storageClass:
  name: "${storageClassName}"
  provisioner: "${storageClassProvisioner}"
  parameters:
    type: "${storageClassType}"
    fsType: "${storageClassFsType}"

persistence:
  enabled: ${persistenceEnabled}
  accessMode: "${persistenceAccessMode}"
  size: "${persistenceSize}"
  storageClassName: "${persistenceStorageClassName}"

job:
  backoffLimit: ${jobBackoffLimit}
