apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.label }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets | quote }}
      initContainers:
        - name: flyway-migration
          image: {{ .Values.initContainers.flywayMigration.image }}
          env:
            - name: FLYWAY_URL
              value: {{ .Values.initContainers.flywayMigration.env.FLYWAY_URL }}
            - name: FLYWAY_USER
              value: {{ .Values.initContainers.flywayMigration.env.FLYWAY_USER }}
            - name: FLYWAY_PASSWORD
              value: {{ .Values.initContainers.flywayMigration.env.FLYWAY_PASSWORD }}
            - name: FLYWAY_LOCATIONS
              value: {{ .Values.initContainers.flywayMigration.env.FLYWAY_LOCATIONS }}
            - name: FLYWAY_SCHEMAS
              value: {{ .Values.initContainers.flywayMigration.env.FLYWAY_SCHEMAS }}
          volumeMounts:
            - name: data-postgresql-0
              mountPath: /data
      containers:
        - name: app-container
          image: {{ .Values.containers.appContainer.image }}
          env:
            - name: DB_URL
              value: {{ .Values.containers.appContainer.env.DB_URL }}
            - name: KAFKA_BROKER1
              value: {{ .Values.containers.appContainer.env.KAFKA_BROKER1 }}
            - name: KAFKA_BROKER2
              value: {{ .Values.containers.appContainer.env.KAFKA_BROKER2 }}
            - name: KAFKA_BROKER3
              value: {{ .Values.containers.appContainer.env.KAFKA_BROKER3 }}
            - name: KAFKA_TOPIC
              value: {{ .Values.containers.appContainer.env.KAFKA_TOPIC }}
            - name: KAFKA_USERNAME
              value: {{ .Values.containers.appContainer.env.KAFKA_USERNAME }}
            - name: KAFKA_PASSWORD
              value: {{ .Values.containers.appContainer.env.KAFKA_PASSWORD }}
          volumeMounts:
            - name: data-postgresql-0
              mountPath: /data
          livenessProbe:
            httpGet:
              path: {{ .Values.containers.appContainer.livenessProbe.path }}
              port: {{ .Values.containers.appContainer.livenessProbe.port }}
            initialDelaySeconds: {{ .Values.containers.appContainer.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.appContainer.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.containers.appContainer.readinessProbe.path }}
              port: {{ .Values.containers.appContainer.readinessProbe.port }}
            initialDelaySeconds: {{ .Values.containers.appContainer.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.containers.appContainer.readinessProbe.periodSeconds }}
      restartPolicy: {{ .Values.restartPolicy }}
      volumes:
        - name: data-postgresql-0
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.pgdata.claimName }}
