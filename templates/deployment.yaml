apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
  labels:
    app: {{ .Values.app.label }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.label }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.label }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets[0].name }}
      initContainers:
        - name: flyway-migration
          image: {{ .Values.image.flywayMigration }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: FLYWAY_URL
              value: {{ .Values.secrets.FLYWAY_URL }}
            - name: FLYWAY_USER
              value: {{ .Values.secrets.FLYWAY_USER }}
            - name: FLYWAY_PASSWORD
              value: {{ .Values.secrets.FLYWAY_PASSWORD }}
            - name: FLYWAY_LOCATIONS
              value: {{ .Values.secrets.FLYWAY_LOCATIONS }}
            - name: FLYWAY_SCHEMAS
              value: {{ .Values.secrets.FLYWAY_SCHEMAS }}
      containers:
        - name: app-container
          image: {{ .Values.image.myApp }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_URL
              value: {{ .Values.secrets.DB_URL }}
            - name: KAFKA_BROKER1
              value: {{ .Values.env.KAFKA_BROKER1 }}
            - name: KAFKA_BROKER2
              value: {{ .Values.env.KAFKA_BROKER2 }}
            - name: KAFKA_BROKER3
              value: {{ .Values.env.KAFKA_BROKER3 }}
            - name: KAFKA_TOPIC
              value: {{ .Values.env.KAFKA_TOPIC }}
            - name: KAFKA_USERNAME
              value: {{ .Values.env.KAFKA_USERNAME }}
            - name: KAFKA_PASSWORD
              value: {{ .Values.env.KAFKA_PASSWORD }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.probes.liveness.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.probes.readiness.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: data-postgresql-0
  restartPolicy: Never
